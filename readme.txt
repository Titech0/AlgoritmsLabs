1. Написати програму (console application), в якій реалізуються наведені нижче методи сортування
- Cортування бульбашкою
- Сортування Шелла
- Сортування злиттям
- Швидке сортування
АЛГОРИТМИ СОРТУВАННЯ НЕ ПОВИННІ ЗМІНЮВАТИ ВИХІДНИЙ МАСИВ!!! 
Якщо передбачається зміна – робите на вході глибоку копію! Час копіювання масиву НЕ включається до підрахунку часу сортування!!!

2. Оцінити час роботи кожного алгоритму на одному й тому самому масиві випадкових цілих чисел (ArrayList<Integer>) розміром
- 10 елементів
- 1000 елементів
- 10000 елементів
- 1000000 елементів

Масив заповнюється випадковими цілими в діапазоні 0..N (N - кількість елементів масиву)

3. Вимоги до якості програми:
	- чотири види сортування реалізуються в окремих класах (BubbleSorter, ShellSorter, MergeSorter, QuickSorter) із загальним інтерфейсом (Sorter)
	- метод інтерфейсу Sorted: public ArrayList<Integer> sort(ArrayList<Integer> input);
	- має бути реалізований enum SortingType з видами сортування (4 елементи)
	- має бути реалізований фабричний метод (статичний), який отримує на вхід значення enum і повертає відповідний клас сортування (тип значення, що повертається - інтерфейс Sorter)
	- метод, який генерує масив вхідних даних (вивести в консоль або всі або перші 50 елементів, якщо розмір масиву більше 100 у форматі "14, 2, 35, 4 ..."). На вхід методу має подаватися кількість елементів, що генеруються.
	- метод підрахунку часу виконання (і виведення його в консоль) приймає такі параметри:
		1. сортований масив (ArrayList<Integer>)
		2. об'єкт класу Sorter (тобто попередньо згенерований фабричним методом об'єкт однієї з чотирьох класів (BubbleSorter, ShellSorter, MergeSorter, QuickSorter))
	- при вході в цей метод потрібно фіксувати час, запускати сортування, виводити час, витрачений на сортування в консоль (як у попередній роботі)
	- коли все це буде реалізовано робимо два вкладені цикли:
		for (int count: {10, 1000, 10000, 1000000}) {
		// вивести інформацію про поточну ітерацію (кількість елементів)
		....
		//генерація масиву
		....
			for (SortingType type: {BUBBLE, SHELL, MERGE, QUICK}) {
			// вивести інформацію про поточну ітерацію (тип сортування)
			....
			// Отримання об'єкта класу Sorter у фабричному методі залежно від значення type
			....
			// викликати метод підрахунку часу виконання
			....
			// вивести на консоль перші 50 елементів відсортованого масиву (у форматі "1, 2, 3, 4...")
			....
			}
		}

